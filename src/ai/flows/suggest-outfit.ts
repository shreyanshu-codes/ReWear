// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Outfit suggestion AI agent.
 *
 * - suggestOutfit - A function that handles the outfit suggestion process.
 * - SuggestOutfitInput - The input type for the suggestOutfit function.
 * - SuggestOutfitOutput - The return type for the suggestOutfit function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestOutfitInputSchema = z.object({
  wardrobeDescription: z
    .string()
    .describe('The description of the user wardrobe.'),
  occasion: z.string().describe('The occasion for which the outfit is needed.'),
});
export type SuggestOutfitInput = z.infer<typeof SuggestOutfitInputSchema>;

const SuggestOutfitOutputSchema = z.object({
  outfitSuggestion: z.string().describe('The outfit suggestion.'),
  reasoning: z.string().describe('The reasoning behind the outfit suggestion.'),
});
export type SuggestOutfitOutput = z.infer<typeof SuggestOutfitOutputSchema>;

export async function suggestOutfit(input: SuggestOutfitInput): Promise<SuggestOutfitOutput> {
  return suggestOutfitFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestOutfitPrompt',
  input: {schema: SuggestOutfitInputSchema},
  output: {schema: SuggestOutfitOutputSchema},
  prompt: `You are a personal stylist. A user is requesting an outfit suggestion from their virtual wardrobe for a specific occasion. Based on the wardrobe description and the occasion, suggest an outfit and explain your reasoning.

Wardrobe Description: {{{wardrobeDescription}}}
Occasion: {{{occasion}}}

Outfit Suggestion:`,
});

const suggestOutfitFlow = ai.defineFlow(
  {
    name: 'suggestOutfitFlow',
    inputSchema: SuggestOutfitInputSchema,
    outputSchema: SuggestOutfitOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
